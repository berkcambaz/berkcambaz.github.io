import{e as M,D as i,H as u,n as f,r as y,h as I,j as o,F as v,C as x,P as m,f as h,m as p,k as E}from"./index-f6720a30.js";var b=M("arrow-big-down-filled","IconArrowBigDownFilled",[["path",{d:"M10 2l-.15 .005a2 2 0 0 0 -1.85 1.995v6.999l-2.586 .001a2 2 0 0 0 -1.414 3.414l6.586 6.586a2 2 0 0 0 2.828 0l6.586 -6.586a2 2 0 0 0 .434 -2.18l-.068 -.145a2 2 0 0 0 -1.78 -1.089l-2.586 -.001v-6.999a2 2 0 0 0 -2 -2h-4z",fill:"currentColor",key:"svg-0",strokeWidth:"0"}]]),C=M("transform","IconTransform",[["path",{d:"M3 6a3 3 0 1 0 6 0a3 3 0 0 0 -6 0",key:"svg-0"}],["path",{d:"M21 11v-3a2 2 0 0 0 -2 -2h-6l3 3m0 -6l-3 3",key:"svg-1"}],["path",{d:"M3 13v3a2 2 0 0 0 2 2h6l-3 -3m0 6l3 -3",key:"svg-2"}],["path",{d:"M15 18a3 3 0 1 0 6 0a3 3 0 0 0 -6 0",key:"svg-3"}]]);const j={act:A,actable:k};function k(t,e){return!!i.getMonsterEvolve(t,e.monsters)}function A(t,e){if(!k(t,e))return;const c=i.getMonsterEvolve(t,e.monsters);c&&(e.monsters.forEach(n=>{const l=n!==void 0&&t.inventory.monsters[n];l&&(i.equipItem(t,l,void 0,u.Weapon),i.equipItem(t,l,void 0,u.Armor),i.equipItem(t,l,void 0,u.Rune),i.equipItem(t,l,void 0,u.Ring),i.equipItem(t,l,void 0,u.Amulet))}),[...e.monsters].sort((n,l)=>n!==void 0&&l!==void 0?l-n:0).forEach(n=>n!==void 0&&t.inventory.monsters.splice(n,1)),t.inventory.monsters.push(c),i.sortMonsters(t))}function B(){const t=f(s=>s.data),[e,c]=y.useState([void 0,void 0,void 0]),n=I.util.getMonsterEvolve(t,e),l=j.actable(t,{monsters:e}),w=()=>{l&&(f.setState(s=>{j.act(s.data,{monsters:e})}),c([void 0,void 0,void 0]))},g=s=>{if(e.filter(r=>r===s).length>0){for(let r=0;r<e.length;++r)if(e[r]===s){const d=[...e];d[r]=void 0,c(d);break}}else for(let r=0;r<e.length;++r)if(e[r]===void 0){const d=[...e];d[r]=s,c(d);break}};return o.jsx(v,{direction:"column",align:"center",gap:"md",mx:"md",my:80,children:o.jsx(x,{withBorder:!0,w:"100%",maw:360,children:o.jsxs(v,{direction:"column",gap:"md",children:[o.jsx(x,{withBorder:!0,children:o.jsxs(v,{direction:"column",gap:"md",children:[o.jsxs(v,{direction:"column",align:"center",gap:"md",children:[o.jsx(v,{gap:"md",children:e.map((s,a)=>{const r=s!==void 0&&t.inventory.monsters[s];return r?o.jsx(m,{src:h.url(p[r.id].path),count:r.level,onClick:()=>g(s)},a):o.jsx(m,{src:h.url(p.Angel.path),blur:!0},a)})}),o.jsx(b,{}),n?o.jsx(m,{src:h.url(p[n.id].path),count:n.level,onClick:()=>{}}):o.jsx(m,{src:h.url(p["Death Knight"].path),blur:!0})]}),o.jsx(E,{leftIcon:o.jsx(C,{}),onClick:w,disabled:!l,children:"Evolve"})]})}),o.jsx(v,{direction:"row",gap:"md",wrap:"wrap",children:t.inventory.monsters.map((s,a)=>o.jsx(m,{src:h.url(p[s.id].path),count:s.level,onClick:()=>g(a),selected:e.includes(a)},a))})]})})})}export{B as default};
