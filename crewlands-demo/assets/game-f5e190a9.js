import{i as Q,Q as W,S as q}from"./index-7b5acefe.js";function V(e){var n=e.seed+=1831565813;return n=Math.imul(n^n>>>15,n|1),n^=n+Math.imul(n^n>>>7,n|61),((n^n>>>14)>>>0)/4294967296}function E(e,n,t){return Math.floor(V(e)*(t-n)+n)}function X(e){return E(e,1,6+1)}function Y(e,n){let t=0;n.forEach(a=>{t+=a.percent});let r=E(e,0,t)+1,i=0;for(let a=0;a<n.length;++a){const o=n[a];if(o&&(i+=o.percent,r<=i))return o.result}}const h={number:E,dice:X,percent:Y};function x(e,n){if(n&&!(n.x<0||n.x>e.width-1)&&!(n.y<0||n.y>e.height-1))return e.tiles[e.width*n.y+n.x]}function Z(e,n,t=1,r=!0){const i=[],a=n.x,o=n.y;r&&(i.push(l.getTile(e,{x:a+t,y:o-t})),i.push(l.getTile(e,{x:a+t,y:o+t})),i.push(l.getTile(e,{x:a-t,y:o+t})),i.push(l.getTile(e,{x:a-t,y:o-t})));for(let u=-t+1;u<t;u++)i.push(l.getTile(e,{x:a+u,y:o-t})),i.push(l.getTile(e,{x:a+t,y:o+u})),i.push(l.getTile(e,{x:a+u,y:o+t})),i.push(l.getTile(e,{x:a-t,y:o+u}));return i.filter(Boolean)}function ee(e,n){return{n:x(e,{x:n.x,y:n.y-1}),e:x(e,{x:n.x+1,y:n.y}),s:x(e,{x:n.x,y:n.y+1}),w:x(e,{x:n.x-1,y:n.y})}}function j(e,n){return I(e==null?void 0:e.pos,n==null?void 0:n.pos)}function I(e,n){return!e||!n?!1:e.x===n.x&&e.y===n.y}function ne(e,n){let t=!1;for(let r=0;r<e.animations.length;++r){const i=e.animations[r];if(i){if(i.async)t=!0;else if(t&&!i.async)break;if(j(i==null?void 0:i.from,n)||j(i==null?void 0:i.to,n))return!0;if(!i.async)break}}return!1}const l={getTile:x,getAdjacentTiles:Z,getAdjacent4Tiles:ee,compareTile:j,comparePos:I,isUnitAnimating:ne};function te(e){const n=e.match.width,t=e.match.height,r=["water","water","water","water","water","water","water","water","grass","grass","dirt","dirt","snow","water","water","grass","dirt","dirt","dirt","snow","water","water","grass","sand","grass","sand","grass","water","water","snow","dirt","dirt","dirt","grass","water","water","snow","dirt","dirt","grass","grass","water","water","water","water","water","water","water","water"],i=[void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,"blossom","forest",void 0,"mountains",void 0,void 0,void 0,void 0,"mountains","mountains","mountains",void 0,void 0,void 0,"forest","cactus",void 0,"cactus","forest",void 0,void 0,void 0,"mountains","mountains","mountains",void 0,void 0,void 0,void 0,"mountains",void 0,"forest","blossom",void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0];for(let u=0;u<t;++u)for(let s=0;s<n;++s){const c=r[s+u*n];c&&e.match.tiles.push({type:c,pos:{x:s,y:u}})}for(let u=0;u<t;++u)for(let s=0;s<n;++s){const c=i[s+u*n];if(!c)continue;const m=e.match.tiles[s+u*n];m&&(m.landmark={id:c,data:{}})}const a=e.match.players[0],o=e.match.players[1];for(let u=0;u<t;++u)for(let s=0;s<n;++s)s===0||s===n-1||(u===1||u===2?e.match.tiles[s+u*n].owner=a==null?void 0:a.id:(u===t-1-1||u===t-2-1)&&(e.match.tiles[s+u*n].owner=o==null?void 0:o.id))}function re(e){const n=e.match.width,t=e.match.height;for(let a=0;a<t;++a)for(let o=0;o<n;++o)e.match.tiles.push({type:"grass",pos:{x:o,y:a}});const r=()=>h.number(e.match,0,Math.floor(n*t/10)),i=()=>h.number(e.match,0,Math.floor(Math.min(n,t)/3));b(e,r()).forEach(a=>{a.type="sand"}),b(e,r()).forEach(a=>{a.type="sand"}),b(e,r()).forEach(a=>{a.type="snow"}),b(e,r()).forEach(a=>{a.type="snow"}),b(e,r()).forEach(a=>{a.type="dirt"}),b(e,r()).forEach(a=>{a.type="dirt"}),b(e,i()).forEach(a=>{a.type="water"}),b(e,i()).forEach(a=>{a.type="water"}),b(e,i()).forEach(a=>{a.type="water"}),ie(e),ae(e)}function ie(e){e.match.tiles.forEach(n=>{let t;switch(n.type){case"grass":t=h.percent(e.match,[{percent:20,result:"forest"},{percent:15,result:"mountains"},{percent:10,result:"blossom"},{percent:55,result:void 0}]);break;case"dirt":t=h.percent(e.match,[{percent:25,result:"mountains"},{percent:75,result:void 0}]);break;case"sand":t=h.percent(e.match,[{percent:25,result:"cactus"},{percent:75,result:void 0}]);break;case"snow":t=h.percent(e.match,[{percent:25,result:"mountains"},{percent:75,result:void 0}]);break}t&&(n.landmark={id:t,data:{}})})}function ae(e){var a;const n=e.match.players,t=[...e.match.tiles],r=[];for(let o=0;o<n.length;++o){const u=h.number(e.match,0,t.length),s=t[u];s&&(t.splice(u,1),r.push([s]),s.type==="water"&&(s.type="sand"),s.landmark&&(s.landmark=void 0),s.owner=(a=n[o])==null?void 0:a.id)}let i=!1;for(;!i;)i=!0,r.forEach((o,u)=>{var w;const s=o[0];if(!s)return;i=!1;let c=!0;const m=l.getAdjacentTiles(e.match,s.pos,1,!1);for(let g=0;g<m.length;++g){const d=m[g];if(!(!d||d.owner)){o.push(d),d.owner=(w=n[u])==null?void 0:w.id,c=!1;break}}c&&o.shift()})}function b(e,n){if(n===0)return[];const t=h.number(e.match,0,e.match.width),r=h.number(e.match,0,e.match.height),i=l.getTile(e.match,{x:t,y:r});if(!i)return[];let a=[i],o=l.getAdjacentTiles(e.match,i.pos,1,!1);for(let u=1;u<n&&o.length>0;++u){const s=h.number(e.match,0,o.length),c=o[s];if(!c)break;a.push(c),o.splice(s,1),o=[...new Set([...o,...l.getAdjacentTiles(e.match,c.pos,1,!1)])].filter(m=>!a.includes(m))}return a}const O={generateCompetitive:te,generateRandom:re};const oe={actable:S,act:N};function S(e,n){return!(!e.match.running||!n.skipAnimation&&e.animations.length>0)}function N(e,n){var u,s,c,m,w;if(!S(e,n))return!1;const t=l.getTile(e.match,n.pos),r=l.getTile(e.match,e.selectedTile)??t,i=e.selectedTile?t:void 0,a=e.match.players.filter(g=>g.id===e.match.turn.player)[0];if(l.compareTile(r,i))return e.selectedTile=void 0,e.highlightedTiles=[],!0;if(a&&t&&((s=(u=v[a.banner]).canCreate)!=null&&s.call(u,e,t)))return(m=(c=v[a.banner]).onCreate)==null||m.call(c,e,t),e.selectedTile=void 0,e.highlightedTiles=[],!0;if(r&&i&&r.unit){const g=f[r.unit.id].getActableTiles(e,r);if(g!=null&&g.filter(d=>l.compareTile(i,d)).length){const d=f[r.unit.id],p=i.unit&&f[i.unit.id];if(d.canMove(e,r,i))d.onMove(e,r,i);else if(d.canAttack(e,r,i)){let k=d.onAttack(e,r,i,"attacker")??0,T=(p==null?void 0:p.onAttack(e,r,i,"defender"))??0;k+=h.dice(e.match),T+=h.dice(e.match),k>T?d.onKill(e,r,i,"attacker"):p==null||p.onKill(e,r,i,"defender")}return e.selectedTile=void 0,e.highlightedTiles=[],N(e,{player:n.player,pos:i.pos,skipAnimation:!0}),!0}}const o=(t==null?void 0:t.unit)&&f[t.unit.id].getActableTiles(e,t);return((w=t==null?void 0:t.unit)==null?void 0:w.owner)===n.player&&o&&o.length>0?(e.selectedTile=t==null?void 0:t.pos,e.highlightedTiles=o.map(g=>g.pos)):(e.selectedTile=void 0,e.highlightedTiles=[]),!0}const ue={actable:P,act:se};function P(e,n){return!(!e.match.running||e.animations.length>0||e.match.players.length===0)}function se(e,n){var o,u;if(!P(e))return!1;const t=e.match.players.length,r=e.match.players.findIndex(s=>{var c;return s.id===((c=e.match)==null?void 0:c.turn.player)}),i=r!==-1?e.match.players[r]:void 0,a=e.match.players[(r+1)%t];return!i||!a?!1:((u=(o=M[e.match.mode.id]).onTurnChange)==null||u.call(o,e,i,a),e.match.turn.count++,e.match.turn.player=a.id,e.selectedTile=void 0,e.highlightedTiles=[],e.match.tiles.forEach(s=>{var c,m,w,g,d,p,k,T;s.landmark&&s.owner===i.id&&((m=(c=v[s.landmark.id]).onNextTurn)==null||m.call(c,e,s)),s.landmark&&s.owner!==i.id&&((g=(w=v[s.landmark.id]).onTurnChange)==null||g.call(w,e,s)),s.unit&&s.unit.owner===i.id&&((p=(d=f[s.unit.id]).onNextTurn)==null||p.call(d,e,s)),s.unit&&s.unit.owner!==i.id&&((T=(k=f[s.unit.id]).onTurnChange)==null||T.call(k,e,s))}),!0)}const ce={actable:R,act:le};function R(e,n){return M[n.modeProps.mode].canCreate(e,n.modeProps)}function le(e,n){return R(e,n)?(M[n.modeProps.mode].onCreate(e,n.modeProps),!0):!1}const fe={actable:L,act:he};function L(e,n){return!(e.match.running||e.match.tiles.length===0||e.match.players.length<=0)}function he(e,n){return L(e)?(e.match.running=!0,!0):!1}const me={actable:de,act:ge};function de(e,n){return!0}function ge(e,n){return e.animations.push(n.animation),!0}const ye={actable:ve,act:pe};function ve(e,n){return!0}function pe(e,n){for(let t=0;t<e.animations.length;++t){const r=e.animations[t];if(r&&r.id===n.animationId){e.animations.splice(t,1);break}}return!0}const be={actable:K,act:we};function K(e,n){return!!e.player.avatars.includes(n.avatar)}function we(e,n){return K(e,n)?(e.player.avatar=n.avatar,!0):!1}const ke={actable:J,act:Te};function J(e,n){return!!e.player.banners.includes(n.banner)}function Te(e,n){return J(e,n)?(e.player.banner=n.banner,!0):!1}const xe={actable:F,act:Me};function F(e,n){return!!e.player.characters.includes(n.character)}function Me(e,n){return F(e,n)?(e.player.character=n.character,!0):!1}const De={actable:z,act:Ce};function z(e,n){return!!e.player.heroes.includes(n.hero)}function Ce(e,n){return z(e,n)?(e.player.hero=n.hero,!0):!1}const G={createMatch:ce,startMatch:fe,selectTile:oe,nextTurn:ue,addAnimation:me,removeAnimation:ye,changeAvatar:be,changeBanner:ke,changeCharacter:xe,changeHero:De};function y(){return{createUnitData(){return{attacked:!0,moved:!0}},onCreate(e,n,t,r){n.unit={id:r,owner:t,data:this.createUnitData()},e.animations.push({id:e.animationId++,type:"spawn",from:n,to:void 0,async:!0})},onRemove(e,n,t,r){e.animations.push({id:e.animationId++,type:"death",from:JSON.parse(JSON.stringify(n)),to:JSON.parse(JSON.stringify(t)),async:r==null?void 0:r.async}),t.unit=void 0},getBonus(e,n){if(!n.unit)return 0;let t=0;return n.landmark&&(e.match.turn.player===n.unit.owner?t+=v[n.landmark.id].getOffensiveBonus(e,n):t+=v[n.landmark.id].getDefensiveBonus(e,n)),l.getAdjacentTiles(e.match,n.pos).forEach(i=>{var a;i.unit&&(i.unit.owner===((a=n.unit)==null?void 0:a.owner)?t+=f[i.unit.id].getAllyBonus(e,n):t+=f[i.unit.id].getEnemyBonus(e,n))}),t},getAllyBonus(e,n){return .5},getEnemyBonus(e,n){return-.5},canMove(e,n,t){if(!n.unit)return!1;const r=n.unit.data;return!(r.moved||r.attacked||t.unit)},canAttack(e,n,t){return!(!n.unit||!t.unit||n.unit.data.attacked||n.unit.owner===t.unit.owner)},getActableTiles(e,n){return n.unit?e.match.turn.player!==n.unit.owner?[]:l.getAdjacentTiles(e.match,n.pos).filter(r=>!(!this.canMove(e,n,r)&&!this.canAttack(e,n,r)||r.type==="water")):[]},onMove(e,n,t){if(!n.unit)return;const r=n.unit.data;t.unit=n.unit,t.owner=n.unit.owner,n.unit=void 0,r.moved=!0,G.addAnimation.act(e,{animation:{id:e.animationId++,type:"move",from:n,to:t}})},onAttack(e,n,t,r){switch(r){case"attacker":if(!n.unit)return 0;const i=n.unit.data;return i.attacked=!0,this.getBonus(e,n);case"defender":return this.getBonus(e,t)}},onDeath(e,n,t,r,i){switch(r){case"attacker":this.onRemove(e,t,n,i);break;case"defender":this.onRemove(e,n,t,i);break}},onKill(e,n,t,r){switch(r){case"attacker":if(!n.unit||!t.unit)break;f[t.unit.id].onDeath(e,n,t,"defender");const i=n.unit.data,a=i.moved;i.attacked=!1,i.moved=!1,this.canMove(e,n,t)?this.onMove(e,n,t):i.moved=a,i.attacked=!0;break;case"defender":if(!n.unit||!t.unit)break;f[t.unit.id].onDeath(e,n,t,"attacker");break}},onNextTurn(e,n){if(!n.unit)return;const t=n.unit.data;t.moved=!1,t.attacked=!1},onTurnChange(e,n){}}}function Be(){const e=y();return e.onKill=function(n,t,r,i){switch(i){case"attacker":if(!t.unit||!r.unit)break;f[r.unit.id].onDeath(n,t,r,"defender");const a=t.unit.data,o=a.moved;a.attacked=!1,a.moved=!1,this.canMove(n,t,r)?this.onMove(n,t,r):a.moved=o;break;case"defender":if(!t.unit||!r.unit)break;f[r.unit.id].onDeath(n,t,r,"attacker");break}},e}function _e(){const e=y();return e.onTurnChange=function(n,t){l.getAdjacentTiles(n.match,t.pos).forEach(i=>{if(!i.unit)return;const a=f[i.unit.id];h.percent(n.match,[{percent:90,result:!1},{percent:10,result:!0}])&&a.onDeath(n,t,i,"defender")})},e}function Ae(){const e=y();return e.createUnitData=function(){return{attacked:!0,moved:!0,canSpawn:!1}},e.onNextTurn=function(n,t){if(!t.unit)return;const r=t.unit.data;r.moved=!1,r.attacked=!1,(r.canSpawn?l.getAdjacentTiles(n.match,t.pos):[]).forEach(a=>{if(!t.unit||a.unit||t.type==="water")return;h.percent(n.match,[{percent:95,result:!1},{percent:5,result:!0}])&&(a.owner=t.unit.owner,this.onCreate(n,a,t.unit.owner,"alien"))}),r.canSpawn=!0},e}function je(){const e=y();return e.createUnitData=function(){return{attacked:!0,moved:!0,protected:!0}},e.onDeath=function(n,t,r,i,a){switch(i){case"attacker":this.onRemove(n,r,t);break;case"defender":if(!r.unit)return;const o=r.unit.data;if(o.protected){o.protected=!1;return}this.onRemove(n,t,r,a);break}},e.onNextTurn=function(n,t){if(!t.unit)return;const r=t.unit.data;r.moved=!1,r.attacked=!1,r.protected=!0},e}function Ee(){const e=y();return e.onKill=function(n,t,r,i){switch(i){case"attacker":if(!t.unit||!r.unit)break;f[r.unit.id].onDeath(n,t,r,"defender",{async:!0});const a=r.pos.x-t.pos.x,o=r.pos.y-t.pos.y,u=l.getTile(n.match,{x:r.pos.x+a*1,y:r.pos.y+o*1}),s=l.getTile(n.match,{x:r.pos.x+a*2,y:r.pos.y+o*2});u&&u.unit&&f[u.unit.id].onDeath(n,t,u,"defender",{async:!0}),s&&s.unit&&f[s.unit.id].onDeath(n,t,s,"defender",{async:!0});const c=t.unit.data,m=c.moved;c.attacked=!1,c.moved=!1,this.canMove(n,t,r)?this.onMove(n,t,r):c.moved=m,c.attacked=!0;break;case"defender":if(!t.unit||!r.unit)break;f[r.unit.id].onDeath(n,t,r,"attacker");break}},e}function $e(){const e=y();return e.onAttack=function(n,t,r,i){switch(i){case"attacker":if(!t.unit)return 0;const a=t.unit.data;a.attacked=!0;let o=0;const u=this.getBonus(n,t),s=this.getBonus(n,r);return o+=u,s>0&&(o+=s),o;case"defender":return this.getBonus(n,r)}},e}function Ue(){const e=y();return e.getAllyBonus=function(n,t){if(!t.unit)return 0;let r=.5;return n.match.turn.player!==t.unit.owner&&(r+=1),r},e}function Ie(){const e=y();return e.getAllyBonus=function(n,t){if(!t.unit)return 0;let r=.5;return n.match.turn.player===t.unit.owner&&(r+=1),r},e}function Oe(){const e=y();return e.getAllyBonus=function(n,t){return 1},e}function Se(){const e=y();return e.createUnitData=function(){return{attacked:!0,moved:!0,bonus:0}},e.getBonus=function(n,t){if(!t.unit)return 0;let r=0;const i=t.unit.data;return r+=i.bonus,t.landmark&&(n.match.turn.player===t.unit.owner?r+=v[t.landmark.id].getOffensiveBonus(n,t):r+=v[t.landmark.id].getDefensiveBonus(n,t)),l.getAdjacentTiles(n.match,t.pos).forEach(o=>{var u;o.unit&&(o.unit.owner===((u=t.unit)==null?void 0:u.owner)?r+=f[o.unit.id].getAllyBonus(n,t):r+=f[o.unit.id].getEnemyBonus(n,t))}),r},e.onNextTurn=function(n,t){if(!t.unit)return;const r=t.unit.data;r.moved=!1,r.attacked=!1,r.bonus=h.number(n.match,-1,6+1)},e}function Ne(){const e=y();return e.getBonus=function(n,t){if(!t.unit)return 0;let r=0;const i=l.getAdjacentTiles(n.match,t.pos);return i.filter(a=>{var o,u;return((o=a.unit)==null?void 0:o.owner)===((u=t.unit)==null?void 0:u.owner)}).length>0?i.forEach(a=>{var o;a.unit&&(a.unit.owner===((o=t.unit)==null?void 0:o.owner)?r+=f[a.unit.id].getAllyBonus(n,t):r+=f[a.unit.id].getEnemyBonus(n,t))}):r+=3,t.landmark&&(n.match.turn.player===t.unit.owner?r+=v[t.landmark.id].getOffensiveBonus(n,t):r+=v[t.landmark.id].getDefensiveBonus(n,t)),r},e}const C=y(),H={face1:C,face2:C,face3:C},D={evil:Be(),poop:_e(),alien:Ae(),clown:je(),invader:Ee(),robot:$e(),cat:Ie(),dog:Ue(),rooster:Oe(),wolf:Ne(),slotMachine:Se()},f={...H,...D};function Pe(){return{getOffensiveBonus(e,n){return 0},getDefensiveBonus(e,n){return 0},canCreate(e,n){if(n.unit||n.landmark||n.type==="water"||n.owner!==e.match.turn.player)return!1;const t=e.match.players.filter(i=>i.id===e.match.turn.player)[0];if(!t||t.banners<=0)return!1;const r=l.getAdjacentTiles(e.match,n.pos);for(let i=0;i<r.length;++i){const a=r[i];if(a&&a.landmark&&a.owner===t.id&&U.includes(a.landmark.id))return!1}return!0},onCreate(e,n){if(n.unit)return;const t=e.match.players.filter(o=>o.id===n.owner)[0];if(!t)return;const r=t.banner,i=t.character,a=f[i];t.banners--,n.landmark={id:r,data:{}},a.onCreate(e,n,t.id,i)},onNextTurn(e,n){if(n.unit)return;const t=e.match.players.filter(a=>a.id===n.owner)[0];if(!t)return;const r=t.character;f[r].onCreate(e,n,t.id,r)}}}function Re(){return{getOffensiveBonus(e,n){return 0},getDefensiveBonus(e,n){return 0}}}function Le(){return{getOffensiveBonus(e,n){return 2},getDefensiveBonus(e,n){return 0}}}function Ke(){return{getOffensiveBonus(e,n){return 0},getDefensiveBonus(e,n){return 2}}}function Je(){return{getOffensiveBonus(e,n){return-2},getDefensiveBonus(e,n){return-2}}}const B=Pe(),_=Re(),$={hut:B,whiteFlag:B,classicalBuilding:B},U=Object.keys($),v={...$,forest:Le(),mountains:Ke(),blossom:_,cactus:Je(),egg:_,web:_};function Fe(){return{createMatchModeData(){return{bannerCounter:{},heroCounter:{}}},canCreate(e,n){return!(!n.players[0]||!n.players[1]||n.players.length>2)},onCreate(e,n){var r;n.players.forEach(i=>{i.banners=1});const t={mode:{id:n.mode,data:this.createMatchModeData()},width:7,height:7,running:!1,tiles:[],players:n.players,seed:0,time:0,turn:{player:((r=n.players[0])==null?void 0:r.id)??"",count:0}};e.match=t,O.generateCompetitive(e)},onTurnChange(e,n,t){const r=e.match.mode.data;let i=r.bannerCounter[n.id]??0,a=r.heroCounter[n.id]??0;if(i++,a++,i>2){const o=Math.floor(i/3);i-=o*3,n.banners+=o}if(a>2){const o=e.match.tiles.filter(u=>!(u.owner!==n.id||u.unit||!u.landmark||!U.includes(u.landmark.id)));for(;Math.floor(a/3)>0&&o.length!==0;){const u=h.number(e.match,0,o.length),s=o[u];s&&(o.splice(u,1),D[n.hero].onCreate(e,s,n.id,n.hero),a-=3)}}r.bannerCounter[n.id]=i,r.heroCounter[n.id]=a}}}function ze(){return{createMatchModeData(){return{bannerCounter:{},heroCounter:{}}},canCreate(e,n){return!(n.width*n.height<n.players.length||n.players.length<=0)},onCreate(e,n){var r;n.players.forEach(i=>{i.banners=2});const t={mode:{id:n.mode,data:this.createMatchModeData()},width:n.width,height:n.height,running:!1,tiles:[],players:n.players,seed:n.seed,time:0,turn:{player:((r=n.players[0])==null?void 0:r.id)??"",count:0}};e.match=t,O.generateRandom(e)},onTurnChange(e,n,t){const r=e.match.mode.data;let i=r.bannerCounter[n.id]??0,a=r.heroCounter[n.id]??0;if(i++,a++,i>2){const o=Math.floor(i/3);i-=o*3,n.banners+=o}if(a>2){const o=e.match.tiles.filter(u=>!(u.owner!==n.id||u.unit||!u.landmark||!U.includes(u.landmark.id)));for(;Math.floor(a/3)>0&&o.length!==0;){const u=h.number(e.match,0,o.length),s=o[u];s&&(o.splice(u,1),D[n.hero].onCreate(e,s,n.id,n.hero),a-=3)}}r.bannerCounter[n.id]=i,r.heroCounter[n.id]=a}}}const Ge=Fe(),He=ze(),M={competitive:Ge,custom:He};function Qe(){return{mode:{id:"custom",data:M.custom.createMatchModeData()},width:0,height:0,running:!1,tiles:[],players:[],seed:0,time:0,turn:{player:"",count:0}}}function We(e,n){return{id:e,name:n,gold:0,diamond:0,trophies:{current:0,max:0,total:0},avatars:["baby"],banners:["hut"],characters:["face1"],heroes:["evil","poop","alien","clown","invader","robot","wolf","slotMachine"],avatar:"baby",banner:"hut",character:"face1",hero:"evil"}}function qe(){return{player:We("00000000","Player"),match:Qe(),hoveredTile:void 0,selectedTile:void 0,highlightedTiles:[],animations:[],animationId:0}}const Ve={data:qe(),lobby:{mode:"custom",width:10,height:10,seed:Date.now(),players:Q.playerColors.slice(0,2).map((e,n)=>({id:`${n}`,name:"Player",color:e,avatar:"baby",banner:"hut",character:"face3",hero:"invader",banners:0}))},preview:!1},Ze=W(q((e,n)=>({...Ve})));function A(){return{}}const Xe={baby:A(),boy:A(),girl:A()},en={events:G,util:l,random:h,avatars:Xe,banners:$,characters:H,heroes:D,landmarks:v,units:f,matchModes:M};export{en as g,Ze as u};
